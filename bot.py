import os
from aiogram import Bot, Dispatcher, F
from aiogram.enums import ParseMode
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.filters import CommandStart
from aiogram import Router
from aiogram.client.default import DefaultBotProperties
from dotenv import load_dotenv

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID"))

bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()
router = Router()
dp.include_router(router)

class Order(StatesGroup):
    waiting_for_request = State()

main_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑")],
        [KeyboardButton(text="‚ÑπÔ∏è –û –Ω–∞—Å")],
        [KeyboardButton(text="üöö –î–æ—Å—Ç–∞–≤–∫–∞ –∏ –æ–ø–ª–∞—Ç–∞")],
        [KeyboardButton(text="üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")],
    ],
    resize_keyboard=True
)

back_button = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text="üîô –ù–∞–∑–∞–¥")]],
    resize_keyboard=True
)

@router.message(CommandStart())
async def start_handler(message: Message, state: FSMContext):
    await state.clear()
    await message.answer(
        "üéæ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
        "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å —Ç–µ–Ω–Ω–∏—Å–Ω—ã–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π –∏–∑ –ï–≤—Ä–æ–ø—ã –≤ –†–æ—Å—Å–∏—é.\n\n"
        "üì¶ –°–∞–º—ã–µ –ª—É—á—à–∏–µ —Ü–µ–Ω—ã, –ø–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ –∏ –ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –ø—Ä—è–º–æ –≤ —á–∞—Ç–µ.\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª –Ω–∏–∂–µ üëá",
        reply_markup=main_menu
    )

@router.message(F.text == "üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑")
async def handle_request(message: Message, state: FSMContext):
    await message.answer(
        "‚úèÔ∏è –û–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ. –£–∫–∞–∂–∏—Ç–µ –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª—å—à–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:\n\n"
        "üéæ –†–∞–∫–µ—Ç–∫–∏ ‚Äî –±—Ä–µ–Ω–¥, –º–æ–¥–µ–ª—å, –≤–µ—Å, —Ä–∞–∑–º–µ—Ä –≥–æ–ª–æ–≤—ã, —Ä—É—á–∫–∞\n"
        "üëü –ö—Ä–æ—Å—Å–æ–≤–∫–∏ ‚Äî –±—Ä–µ–Ω–¥, –º–æ–¥–µ–ª—å, —Ä–∞–∑–º–µ—Ä, –≥—Ä—É–Ω—Ç/—Ö–∞—Ä–¥, –º—É–∂/–∂–µ–Ω\n"
        "üßµ –°—Ç—Ä—É–Ω—ã ‚Äî –±—Ä–µ–Ω–¥, –Ω–∞–∑–≤–∞–Ω–∏–µ, —Ç–æ–ª—â–∏–Ω–∞, –∫–æ–º–ø–ª–µ–∫—Ç/–±–æ–±–∏–Ω–∞\n"
        "ü©π –ù–∞–º–æ—Ç–∫–∏ ‚Äî –±—Ä–µ–Ω–¥, —Ü–≤–µ—Ç, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ\n\n"
        "üìå –ü—Ä–∏–º–µ—Ä:\n"
        "Wilson Blade 98, 305g, L2, 98 sq.in, 1 —à—Ç\n\n"
        "üì¨ –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏ –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö ‚Äî "
        "–º—ã –Ω–∞–ø–∏—à–µ–º –≤–∞–º –ø–æ –Ω–∞–ª–∏—á–∏—é, —Ü–µ–Ω–µ –∏ —Å—Ä–æ–∫–∞–º –¥–æ—Å—Ç–∞–≤–∫–∏.",
        reply_markup=back_button
    )
    await state.set_state(Order.waiting_for_request)

@router.message(Order.waiting_for_request)
async def forward_request_to_admin(message: Message, state: FSMContext):
    text = message.text.strip()

    if not text or text == "üîô –ù–∞–∑–∞–¥":
        await message.answer("‚ùå –ó–∞—è–≤–∫–∞ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –í—ã –Ω–∏—á–µ–≥–æ –Ω–µ –≤–≤–µ–ª–∏.", reply_markup=main_menu)
        await state.clear()
        return

    await message.answer("‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –ú—ã —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.", reply_markup=main_menu)

    admin_text = (
        f"üì• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç @{message.from_user.username or '–±–µ–∑ –Ω–∏–∫–∞'}:\n\n"
        f"{text}\n\n"
        f"Telegram ID: <code>{message.from_user.id}</code>"
    )
    await bot.send_message(chat_id=ADMIN_ID, text=admin_text)
    await state.clear()

@router.message(F.text == "‚ÑπÔ∏è –û –Ω–∞—Å")
async def about_us(message: Message):
    text = (
        "–ú—ã –¥–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–Ω–Ω–∏—Å–Ω—ã–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –∏–∑ –ï–≤—Ä–æ–ø—ã –≤ –†–æ—Å—Å–∏—é.\n\n"
        "–†–∞–±–æ—Ç–∞–µ–º —Å –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–º–∏ –º–∞–≥–∞–∑–∏–Ω–∞–º–∏ ‚Äî –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –æ—Ç–ª–∏—á–Ω—ã–µ —Ü–µ–Ω—ã, "
        "—á–∞—Å—Ç–æ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –Ω–∏–∂–µ, —á–µ–º –≤ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –æ–Ω–ª–∞–π–Ω-–º–∞–≥–∞–∑–∏–Ω–∞—Ö.\n\n"
        "üí∞ –ü—Ä–∏–º–µ—Ä—ã:\n\n"
        "Wilson Pro Staff 97 v14\n"
        "‚Ä¢ Racketlon: 40 000 ‚ÇΩ\n"
        "‚Ä¢ Tennispro: 40 000 ‚ÇΩ\n"
        "‚Ä¢ –£ –ù–ê–°: 23 000 ‚ÇΩ *\n\n"
        "Luxilon BB Alu Power (–±–æ–±–∏–Ω–∞, 220 –º)\n"
        "‚Ä¢ Racketlon: 38 000 ‚ÇΩ\n"
        "‚Ä¢ Tennispro: 40 000 ‚ÇΩ\n"
        "‚Ä¢ –£ –ù–ê–°: 24 000 ‚ÇΩ *\n\n"
        "Nike Air Zoom Vapor 11 (–∫—Ä–æ—Å—Å–æ–≤–∫–∏)\n"
        "‚Ä¢ Racketlon: 31 900 ‚ÇΩ\n"
        "‚Ä¢ Tennispro: 30 000 ‚ÇΩ\n"
        "‚Ä¢ –£ –ù–ê–°: 22 500 ‚ÇΩ *\n\n"
        "* –¶–µ–Ω—ã –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω—ã–µ. –ó–∞–≤–∏—Å–∏—Ç –æ—Ç –∫—É—Ä—Å–∞ –∏ –Ω–∞–ª–∏—á–∏—è –≤ –º–∞–≥–∞–∑–∏–Ω–∞—Ö."
    )
    await message.answer(text, reply_markup=back_button)

@router.message(F.text == "üöö –î–æ—Å—Ç–∞–≤–∫–∞ –∏ –æ–ø–ª–∞—Ç–∞")
async def delivery_info(message: Message):
    text = (
        "üì¶ –î–æ—Å—Ç–∞–≤–∫–∞:\n"
        "‚Ä¢ –°—Ä–æ–∫: –æ—Ç 7 –¥–æ 30 –¥–Ω–µ–π\n"
        "‚Ä¢ –°–ø–æ—Å–æ–±—ã: –ø–æ—á—Ç–∞ –∏–ª–∏ —Å –ø–æ–ø—É—Ç—á–∏–∫–æ–º\n"
        "‚Ä¢ –ú—ã —Å–∞–º–∏ –Ω–∞–¥—ë–∂–Ω–æ —É–ø–∞–∫—É–µ–º —Ç–æ–≤–∞—Ä\n\n"
        "üí≥ –û–ø–ª–∞—Ç–∞:\n"
        "‚Ä¢ –ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–∞–ª–∏—á–∏—è –∏ —Ü–µ–Ω—ã\n"
        "‚Ä¢ –ü–µ—Ä–µ–≤–æ–¥–æ–º –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫—É—é –∫–∞—Ä—Ç—É\n\n"
        "üì¨ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä—è–º–æ –≤ –±–æ—Ç (—Ñ–æ—Ç–æ –∏–ª–∏ —Å–∫—Ä–∏–Ω)"
    )
    await message.answer(text, reply_markup=back_button)

@router.message(F.text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
async def contacts(message: Message):
    text = (
        "–í—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞—à –∑–∞–∫–∞–∑ –∏–ª–∏ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –Ω–∞–ø—Ä—è–º—É—é –ø–æ –ª—é–±–æ–º—É –∏–∑ —ç—Ç–∏—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤:\n\n"
        "üì± Telegram: @antonbelikov\n"
        "üìß Email: anbelmax@gmail.com\n"
        "üìû WhatsApp: +7 918 568 09 20\n\n"
        "–ë—É–¥–µ–º —Ä–∞–¥—ã –ø–æ–º–æ—á—å –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã!"
    )
    await message.answer(text, reply_markup=back_button)

@router.message(F.text == "üîô –ù–∞–∑–∞–¥")
async def back_to_main(message: Message, state: FSMContext):
    await state.clear()
    await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu)

if __name__ == "__main__":
    import asyncio
    asyncio.run(dp.start_polling(bot))
